# JWT: use for secure api;
..............................
- create token
..............................
1. after user login send user basic info to create token;
2. in the server side: npm i jsonwebtoken for install jwt;
3. import / require jsonwebtoken;
4. jwt.sign(payload, secret, {expire});
5. return / send token to the client side;

6. after receiving the token store it either http only cookie(best solution) or local storage(second best solution);

7. use a general space onAuthStateChanged > AuthProvider;

...............................
- send token to the server
...............................
1. for sensitive api call () send authorization headers { authorization: `Bearer token` };

..................................
verify token
..................................
1. create a func called verifyJWT(any);
2. this func will have three param: (req, res, next);
3. first check whether the authorization headers exists;
4. if not send 401;
5. get the token out of the authorization header;
6. call jwt.verify(token, secret, (err, decoded));
7. if err => send 401;
8. set decoded to the req obj so that we can access / retrieve later;
9. call the next() to go to the next func;

....................................................
1. check whether token has the email that matches with the request email